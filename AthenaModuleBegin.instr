/*******************************************************************************
*         McXtrace instrument definition URL=http://www.mcxtrace.org
*
* Instrument: AthenaSynthesisStray
*
* %Identification
* Written by: Arne 'S Jegers
* Date:
* Origin: DTU Space
* Release: McXtrace (version)
* Version: 1
* %INSTRUMENT_SITE: ESA
*
* Athena Silicon Pore Optics simulation
*
* %Description
* Single parabolic-hyperbolic pore pair of Athena's SPO optics array. The pore pair can be set to correspond to the middle pores of any of the 1062 mirror modules. The monitor at the focal plane outputs a data file. See the FINALLY section for the specifications of this file.
*
* %Parameters
*
* %Link
* A reference/HTML link for more information
*
* %End
*******************************************************************************/

DEFINE INSTRUMENT AthenaModule(
    int module_nr = 0,
    int plate_nr = 0,
    int energy = 1,
    int source_type = 0,
    double source_th = 0,
    double source_dx = 0,
    double source_dy = 0,
    int absorb_sides = 1,
    int absorb_bottom = 1,
    char* output_filename = "")

/* The DECLARE section allows us to declare variables or  small      */
/* functions in C syntax. These may be used in the whole instrument. */
DECLARE
%{
    int min(int x, int y){
      if(x > y){
        return y;
      }
      return x;
    }

    #define TWOPI 6.283185307
    #define DEGTORAD 0.017453293

    #define FOCALLENGTH 12

    #define PLATE_THICKNESS 0.00017
    #define PORE_PITCH_DEFAULT 0.001
    #define PLATE_PITCH_DEFAULT 0.000775
    #define PORE_HEIGHT_DEFAULT 0.000605
    #define PORE_WIDTH_DEFAULT 0.00083
    #define MODULE_HEIGHT_DEFAULT 0.053645
    #define CHAMFERWIDTH 0

    #include "geom.c"
    #include "dataOutput.c"
    #include <unistd.h>

    // Pore parameters
    #define MAXPORES 93
    double poreX[MAXPORES];
    double poreY[MAXPORES];
    double poreAngle[MAXPORES];
    double poreAngleDegrees[MAXPORES];
    double poreW;
    double poreH;
    double porePitch;

    double radiusP;
    double radiusH;
    double radiusM;

    double moduleAngle;
    int poresPerPlate;

    double parabolaDeviation;
    double hyperbolaDeviation;

    // MISC STUFF
    double sourceToOptics = 1;
    double focalLength = 12;

    double majorRadius = 1.5;

    double dEnergy = 0.00001;     //KeV

    int finalResolution = 1024;
    double detectorSize = 0.13312;

    int wideResolution = 255;
    double wideSize = 3;  //Edge size in meters of wide monitor

    double thX, thY, thZ;
    double srcW;
    double srcH;

    //Counters
    long photonCount;
    long photonPassedThrough;
    double photonPassedThroughWeighted;

    char* coating;
    char* coatingSide;
    char* coatingBottom;

    char enteredPore;
%}

/* The INITIALIZE section is executed when the simulation starts     */
/* (C code). You may use them as component parameter values.         */

INITIALIZE
%{
    bufferInit();
